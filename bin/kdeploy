#!/usr/bin/env bash

# Yeah, this really has to happen now. Ingress creates "classic" loadbalancers.
#https://medium.com/devops-dudes/running-the-latest-aws-load-balancer-controller-in-your-aws-eks-cluster-9d59cdc1db98

# A workaround for NLB loop back problem. Solution, TargetGroupType=ip
# https://stackoverflow.com/questions/47272557/aws-network-load-balancer-doesnt-allow-traffic-to-its-source-instance-from-it-s

# Namespace
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Namespace
metadata:
  name: devops-app
EOF

# Deployment
cat <<EOF | kubectl apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debug-app
  namespace: devops-app
spec:
  selector:
    matchLabels:
      app: debug-app
  replicas: 1
  template:
    metadata:
      labels:
        app: debug-app
    spec:
      containers:
      - name: debug-app
        image: realorko/docker-debugging-app:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: FAIL_HEALTH_CHECK
          value: "false"
        - name: REQUEST_DELAY
          value: "1"
        livenessProbe:
          httpGet:
            path: /test
            port: http
          initialDelaySeconds: 4
          periodSeconds: 30
EOF

# Service
# Services are over using the SG's for EKS nodes: https://github.com/kubernetes/kops/issues/2721
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Service
metadata:
  name: debug-app
  namespace: devops-app
  annotations:
    #external-dns.alpha.kubernetes.io/hostname: debug-app.nate.services
    #service.beta.kubernetes.io/aws-load-balancer-name: "debug-app"
    #service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    #service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "ssl"
    #service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    #service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    #service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: debug-app
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8000
  sessionAffinity: None
  type: ClusterIP
#---
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: debug-app-monitor
#  namespace: devops-app
#  labels:
#    app: debug-app
#    release: prometheus-stack
#spec:
#  selector:
#    matchLabels:
#      app: debug-app
#  endpoints:
#  - port: http
#    path: /metrics
#    interval: 15s
#    scheme: http
#  namespaceSelector:
#    matchNames:
#    - devops-app
EOF

# Ingress
#cat <<EOF | kubectl apply -f -
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: debug-app
#  namespace: devops-app
#  annotations:
#    kubernetes.io/ingress.class: alb
#    alb.ingress.kubernetes.io/scheme: internal
#    alb.ingress.kubernetes.io/target-type: instance
#    alb.ingress.kubernetes.io/backend-protocol: HTTP
#    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
#    alb.ingress.kubernetes.io/tags: Environment=dev,App=debug-app, Team=devops
#spec:
#  rules:
#    - host: debug-app.nate.services
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: debug-app
#              servicePort: 443
#EOF

kubectl wait --for=condition=available --timeout=600s deployment/debug-app -n devops-app
